{
  "name": "cRonstrue",
  "tagline": "Convert cron expressions into human readable descriptions",
  "body": "# cRonstrue [![Build Status](https://travis-ci.org/bradyholt/cronstrue.svg?branch=master)](https://travis-ci.org/bradyholt/cronstrue) [![NPM Package](https://img.shields.io/npm/v/cronstrue.svg)](https://www.npmjs.com/package/cronstrue)\r\n\r\ncRonstrue is a JavaScript library that parses a cron expression and outputs a human readable description of the cron schedule.  For example, given the expression \"*/5 * * * *\" it will output \"Every 5 minutes\".\r\n\r\nThis library was ported from the original C# implemenation called [cron-expression-descriptor](https://github.com/bradyholt/cron-expression-descriptor) and is also available in a [few other languages](https://github.com/bradyholt/cron-expression-descriptor#ports).\r\n\r\n## Features\r\n- Zero dependencies\r\n- Supports all cron expression special characters including * / , - ? L W, #\r\n- Supports 5, 6 (w/ seconds or year), or 7 (w/ seconds and year) part cron expressions\r\n- i18n support with 14 languages\r\n\r\n## Installation\r\ncRonstrue is exported as an [UMD](https://github.com/umdjs/umd) module so it will work in an [AMD](https://github.com/amdjs/amdjs-api/wiki/AMD), [CommonJS](http://wiki.commonjs.org/wiki/CommonJS) or browser global context.\r\n### Node\r\n```\r\nnpm install cronstrue\r\nvar cronstrue = require('cronstrue');\r\n```\r\n### Browser\r\n The `cronstrue.min.js` file from the `/dist` folder in the npm package should be served to the browser.  There are no dependencies so you can simply include the library in a `<script>` tag.\r\n```\r\n<script src=\"cronstrue.min.js\" type=\"text/javascript\"></script>\r\n<script>\r\n  var cronstrue = window.cronstrue;\r\n</script>\r\n```\r\n\r\n## Usage\r\n\r\n```\r\ncronstrue.toString(\"* * * * *\");\r\n> \"Every minute\"\r\n\r\ncronstrue.toString(\"0 23 ? * MON-FRI\");\r\n> \"At 11:00 PM, Monday through Friday\"\r\n\r\ncronstrue.toString(\"23 12 * * SUN#2\");\r\n> \"At 12:23 PM, on the second Sunday of the month\"\r\n```\r\n\r\nFor more usage examples, including a demonstration of how cRonstrue can handle some very complex cron expressions, you can [reference the unit tests](https://github.com/bradyholt/cronstrue/blob/master/test/cronstrue.js).\r\n\r\n## i18n\r\n\r\nTo use the i18n support cRonstrue provides, you must use the packaged library that contains the locale transalations.  Once you do this, you can pass the name of a supported locale as an option to  `cronstrue.toString()`.  For example, for the es (Spanish) locale, you would use: `cronstrue.toString(\"* * * * *\", { locale: \"es\" });`.\r\n\r\n### Node\r\n```\r\nvar cronstrue = require('cronstrue/i18n');\r\ncronstrue.toString(\"*/5 * * * *\", { locale: \"fr\" });\r\n```\r\n### Browser\r\n The `cronstrue-i18n.min.js` file from the `/dist` folder in the npm package should be served to the browser.\r\n```\r\n<script src=\"cronstrue-i18n.min.js\" type=\"text/javascript\"></script>\r\n<script>\r\n  cronstrue.toString(\"*/5 * * * *\", { locale: \"fr\" });\r\n</script>\r\n```\r\n\r\n### Supported Locales\r\n\r\n- en - English\r\n- nl - Dutch\r\n- fr - French\r\n- de - German\r\n- it - Italian\r\n- nb - Norwegian\r\n- pl - Polish\r\n- pt_BR - Portuguese (Brazil)\r\n- ro - Romanian\r\n- ru - Russian\r\n- es - Spanish\r\n- tr - Turkish\r\n- uk - Ukrainian\r\n- zh_CN - Chinese (Simplified)\r\n\r\n## License\r\n\r\ncRonstrue is freely distributable under the terms of the [MIT license](https://github.com/bradyholt/cronstrue/blob/master/LICENSE).\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}